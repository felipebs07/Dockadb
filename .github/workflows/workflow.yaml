name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10
        options: --privileged

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build with Maven
      run: |
        cd dockadb-api
        mvn clean package

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
        docker build -t dockadb-app ./dockadb-api

    - name: Run Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d
      env:
        MONGO_DB_DATABASE: ${{ secrets.MONGO_DB_DATABASE }}
        MONGO_DB_USERNAME: ${{ secrets.MONGO_DB_USERNAME }}
        MONGO_DB_PASSWORD: ${{ secrets.MONGO_DB_PASSWORD }}
        MONGO_DB_PARAMS: ${{ secrets.MONGO_DB_PARAMS }}

    - name: Run tests
      run: |
        # Aqui você pode rodar testes ou comandos que verifiquem a funcionalidade da sua aplicação
        # Por exemplo, você pode rodar um comando curl para verificar se a aplicação está rodando
        curl --fail http://localhost:8008/health || exit 1

    - name: Tear down Docker Compose
      run: |
        docker-compose -f docker-compose.yml down
